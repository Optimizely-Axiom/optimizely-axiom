name: Comment on PR

on:
  workflow_run:
    workflows: [CI]
    types: [completed]

jobs:
  bundle-size:
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            const matchArtifact = allArtifacts.data.artifacts.filter(
              (artifact) => artifact.name == "pr-build"
            )[0];
            const download = await github.rest.actions.downloadArtifact({
              archive_format: "zip",
              artifact_id: matchArtifact.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const fs = require("fs");
            fs.writeFileSync(
              `${process.env.GITHUB_WORKSPACE}/pr-build.zip`,
              Buffer.from(download.data)
            );

      - run: unzip pr-build.zip

      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs");
            const issue_number = Number(fs.readFileSync("./ID"));
            const marker = "<!-- bundle-size-report -->";
            const body = marker + "\n" + fs.readFileSync("./bundle-size.md");

            const { data: comments } = await github.rest.issues.listComments({
              issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const botComment = comments.find(
              (comment) => comment.user.type === "Bot" && comment.body.includes(marker)
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                body,
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
            } else {
              await github.rest.issues.createComment({
                body,
                issue_number,
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
            }
