:global(#__next):has(.brand)::after {
  --bg: color-mix(in srgb, var(--ax-colors-fg-accent) 20%, transparent);

  animation: pulse 10s infinite;
  background-image: linear-gradient(var(--bg) 1px, transparent 1px),
    linear-gradient(to right, var(--bg) 1px, transparent 1px);
  background-size: 40px 40px;
  content: "";
  inset: 0;
  mask-image: linear-gradient(
    120deg,
    rgb(0 0 0 / 30%) calc(40%),
    rgb(0 0 0 / 100%),
    rgb(0 0 0 / 30%) calc(60%)
  );
  mask-position: 200% 0%;
  mask-size: 150% 100%;
  pointer-events: none;
  position: absolute;
}

.brand {
  color: color-mix(in srgb, var(--ax-colors-fg-accent), transparent);
}

.button {
  --bg: color-mix(
    in srgb,
    var(--ax-colors-bg-accent-light) 60%,
    var(--ax-colors-bg-default)
  );

  animation: spin 5s linear infinite;
  border: 1px solid transparent;
  background-image: linear-gradient(var(--bg), var(--bg)),
    conic-gradient(
      from var(--angle),
      color-mix(in srgb, var(--ax-colors-border-accent) 10%, var(--bg)) 15%,
      var(--ax-colors-border-accent),
      color-mix(in srgb, var(--ax-colors-border-accent) 10%, var(--bg)) 85%
    );
  background-origin: border-box;
  background-clip: padding-box, border-box;
  box-shadow: 0 0 30px 5px
    color-mix(in srgb, var(--ax-colors-border-accent) 10%, transparent);
  position: relative;
  transition:
    all 0.3s,
    --bg 0.3s;
}

.button:hover {
  --bg: color-mix(
    in srgb,
    var(--ax-colors-bg-accent-light) 80%,
    var(--ax-colors-bg-default)
  );
}

@keyframes pulse {
  100% {
    mask-position: -100% 0%;
  }
}

@keyframes spin {
  to {
    --angle: 1turn;
  }
}

@property --angle {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0turn;
}

@property --bg {
  syntax: "<color>";
  inherits: false;
  initial-value: transparent;
}

@property --spread {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
